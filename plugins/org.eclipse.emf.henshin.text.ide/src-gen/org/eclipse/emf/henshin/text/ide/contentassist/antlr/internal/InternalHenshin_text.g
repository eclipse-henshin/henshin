/*
 * generated by Xtext 2.16.0
 */
grammar InternalHenshin_text;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.eclipse.emf.henshin.text.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.emf.henshin.text.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.emf.henshin.text.services.Henshin_textGrammarAccess;

}
@parser::members {
	private Henshin_textGrammarAccess grammarAccess;

	public void setGrammarAccess(Henshin_textGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEPackageImport
entryRuleEPackageImport
:
{ before(grammarAccess.getEPackageImportRule()); }
	 ruleEPackageImport
{ after(grammarAccess.getEPackageImportRule()); } 
	 EOF 
;

// Rule EPackageImport
ruleEPackageImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEPackageImportAccess().getGroup()); }
		(rule__EPackageImport__Group__0)
		{ after(grammarAccess.getEPackageImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getGroup()); }
		(rule__EString__Group__0)
		{ after(grammarAccess.getEStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelElement
entryRuleModelElement
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelElementAccess().getAlternatives()); }
		(rule__ModelElement__Alternatives)
		{ after(grammarAccess.getModelElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleElement
entryRuleRuleElement
:
{ before(grammarAccess.getRuleElementRule()); }
	 ruleRuleElement
{ after(grammarAccess.getRuleElementRule()); } 
	 EOF 
;

// Rule RuleElement
ruleRuleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleElementAccess().getAlternatives()); }
		(rule__RuleElement__Alternatives)
		{ after(grammarAccess.getRuleElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJavaImport
entryRuleJavaImport
:
{ before(grammarAccess.getJavaImportRule()); }
	 ruleJavaImport
{ after(grammarAccess.getJavaImportRule()); } 
	 EOF 
;

// Rule JavaImport
ruleJavaImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJavaImportAccess().getGroup()); }
		(rule__JavaImport__Group__0)
		{ after(grammarAccess.getJavaImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckDangling
entryRuleCheckDangling
:
{ before(grammarAccess.getCheckDanglingRule()); }
	 ruleCheckDangling
{ after(grammarAccess.getCheckDanglingRule()); } 
	 EOF 
;

// Rule CheckDangling
ruleCheckDangling 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckDanglingAccess().getGroup()); }
		(rule__CheckDangling__Group__0)
		{ after(grammarAccess.getCheckDanglingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInjectiveMatching
entryRuleInjectiveMatching
:
{ before(grammarAccess.getInjectiveMatchingRule()); }
	 ruleInjectiveMatching
{ after(grammarAccess.getInjectiveMatchingRule()); } 
	 EOF 
;

// Rule InjectiveMatching
ruleInjectiveMatching 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInjectiveMatchingAccess().getGroup()); }
		(rule__InjectiveMatching__Group__0)
		{ after(grammarAccess.getInjectiveMatchingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditions
entryRuleConditions
:
{ before(grammarAccess.getConditionsRule()); }
	 ruleConditions
{ after(grammarAccess.getConditionsRule()); } 
	 EOF 
;

// Rule Conditions
ruleConditions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionsAccess().getGroup()); }
		(rule__Conditions__Group__0)
		{ after(grammarAccess.getConditionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraph
entryRuleGraph
:
{ before(grammarAccess.getGraphRule()); }
	 ruleGraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule Graph
ruleGraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphAccess().getGroup()); }
		(rule__Graph__Group__0)
		{ after(grammarAccess.getGraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionType
entryRuleActionType
:
{ before(grammarAccess.getActionTypeRule()); }
	 ruleActionType
{ after(grammarAccess.getActionTypeRule()); } 
	 EOF 
;

// Rule ActionType
ruleActionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionTypeAccess().getAlternatives()); }
		(rule__ActionType__Alternatives)
		{ after(grammarAccess.getActionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphElements
entryRuleGraphElements
:
{ before(grammarAccess.getGraphElementsRule()); }
	 ruleGraphElements
{ after(grammarAccess.getGraphElementsRule()); } 
	 EOF 
;

// Rule GraphElements
ruleGraphElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphElementsAccess().getAlternatives()); }
		(rule__GraphElements__Alternatives)
		{ after(grammarAccess.getGraphElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdges
entryRuleEdges
:
{ before(grammarAccess.getEdgesRule()); }
	 ruleEdges
{ after(grammarAccess.getEdgesRule()); } 
	 EOF 
;

// Rule Edges
ruleEdges 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgesAccess().getGroup()); }
		(rule__Edges__Group__0)
		{ after(grammarAccess.getEdgesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdge
entryRuleEdge
:
{ before(grammarAccess.getEdgeRule()); }
	 ruleEdge
{ after(grammarAccess.getEdgeRule()); } 
	 EOF 
;

// Rule Edge
ruleEdge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeAccess().getGroup()); }
		(rule__Edge__Group__0)
		{ after(grammarAccess.getEdgeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiRuleReuseNode
entryRuleMultiRuleReuseNode
:
{ before(grammarAccess.getMultiRuleReuseNodeRule()); }
	 ruleMultiRuleReuseNode
{ after(grammarAccess.getMultiRuleReuseNodeRule()); } 
	 EOF 
;

// Rule MultiRuleReuseNode
ruleMultiRuleReuseNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiRuleReuseNodeAccess().getGroup()); }
		(rule__MultiRuleReuseNode__Group__0)
		{ after(grammarAccess.getMultiRuleReuseNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
		(rule__Attribute__Alternatives)
		{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiRule
entryRuleMultiRule
:
{ before(grammarAccess.getMultiRuleRule()); }
	 ruleMultiRule
{ after(grammarAccess.getMultiRuleRule()); } 
	 EOF 
;

// Rule MultiRule
ruleMultiRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiRuleAccess().getGroup()); }
		(rule__MultiRule__Group__0)
		{ after(grammarAccess.getMultiRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormula
entryRuleFormula
:
{ before(grammarAccess.getFormulaRule()); }
	 ruleFormula
{ after(grammarAccess.getFormulaRule()); } 
	 EOF 
;

// Rule Formula
ruleFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormulaAccess().getGroup()); }
		(rule__Formula__Group__0)
		{ after(grammarAccess.getFormulaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogic
entryRuleLogic
:
{ before(grammarAccess.getLogicRule()); }
	 ruleLogic
{ after(grammarAccess.getLogicRule()); } 
	 EOF 
;

// Rule Logic
ruleLogic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicAccess().getORorXORParserRuleCall()); }
		ruleORorXOR
		{ after(grammarAccess.getLogicAccess().getORorXORParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleORorXOR
entryRuleORorXOR
:
{ before(grammarAccess.getORorXORRule()); }
	 ruleORorXOR
{ after(grammarAccess.getORorXORRule()); } 
	 EOF 
;

// Rule ORorXOR
ruleORorXOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getORorXORAccess().getGroup()); }
		(rule__ORorXOR__Group__0)
		{ after(grammarAccess.getORorXORAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAND
entryRuleAND
:
{ before(grammarAccess.getANDRule()); }
	 ruleAND
{ after(grammarAccess.getANDRule()); } 
	 EOF 
;

// Rule AND
ruleAND 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANDAccess().getGroup()); }
		(rule__AND__Group__0)
		{ after(grammarAccess.getANDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup()); }
		(rule__Atomic__Group__0)
		{ after(grammarAccess.getAtomicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionGraph
entryRuleConditionGraph
:
{ before(grammarAccess.getConditionGraphRule()); }
	 ruleConditionGraph
{ after(grammarAccess.getConditionGraphRule()); } 
	 EOF 
;

// Rule ConditionGraph
ruleConditionGraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionGraphAccess().getGroup()); }
		(rule__ConditionGraph__Group__0)
		{ after(grammarAccess.getConditionGraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionGraphElements
entryRuleConditionGraphElements
:
{ before(grammarAccess.getConditionGraphElementsRule()); }
	 ruleConditionGraphElements
{ after(grammarAccess.getConditionGraphElementsRule()); } 
	 EOF 
;

// Rule ConditionGraphElements
ruleConditionGraphElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionGraphElementsAccess().getAlternatives()); }
		(rule__ConditionGraphElements__Alternatives)
		{ after(grammarAccess.getConditionGraphElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionEdges
entryRuleConditionEdges
:
{ before(grammarAccess.getConditionEdgesRule()); }
	 ruleConditionEdges
{ after(grammarAccess.getConditionEdgesRule()); } 
	 EOF 
;

// Rule ConditionEdges
ruleConditionEdges 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionEdgesAccess().getGroup()); }
		(rule__ConditionEdges__Group__0)
		{ after(grammarAccess.getConditionEdgesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionEdge
entryRuleConditionEdge
:
{ before(grammarAccess.getConditionEdgeRule()); }
	 ruleConditionEdge
{ after(grammarAccess.getConditionEdgeRule()); } 
	 EOF 
;

// Rule ConditionEdge
ruleConditionEdge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionEdgeAccess().getGroup()); }
		(rule__ConditionEdge__Group__0)
		{ after(grammarAccess.getConditionEdgeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionNode
entryRuleConditionNode
:
{ before(grammarAccess.getConditionNodeRule()); }
	 ruleConditionNode
{ after(grammarAccess.getConditionNodeRule()); } 
	 EOF 
;

// Rule ConditionNode
ruleConditionNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionNodeAccess().getGroup()); }
		(rule__ConditionNode__Group__0)
		{ after(grammarAccess.getConditionNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionReuseNode
entryRuleConditionReuseNode
:
{ before(grammarAccess.getConditionReuseNodeRule()); }
	 ruleConditionReuseNode
{ after(grammarAccess.getConditionReuseNodeRule()); } 
	 EOF 
;

// Rule ConditionReuseNode
ruleConditionReuseNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionReuseNodeAccess().getGroup()); }
		(rule__ConditionReuseNode__Group__0)
		{ after(grammarAccess.getConditionReuseNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatch
entryRuleMatch
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchAccess().getGroup()); }
		(rule__Match__Group__0)
		{ after(grammarAccess.getMatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitElement
entryRuleUnitElement
:
{ before(grammarAccess.getUnitElementRule()); }
	 ruleUnitElement
{ after(grammarAccess.getUnitElementRule()); } 
	 EOF 
;

// Rule UnitElement
ruleUnitElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitElementAccess().getAlternatives()); }
		(rule__UnitElement__Alternatives)
		{ after(grammarAccess.getUnitElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequentialProperties
entryRuleSequentialProperties
:
{ before(grammarAccess.getSequentialPropertiesRule()); }
	 ruleSequentialProperties
{ after(grammarAccess.getSequentialPropertiesRule()); } 
	 EOF 
;

// Rule SequentialProperties
ruleSequentialProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequentialPropertiesAccess().getAlternatives()); }
		(rule__SequentialProperties__Alternatives)
		{ after(grammarAccess.getSequentialPropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrict
entryRuleStrict
:
{ before(grammarAccess.getStrictRule()); }
	 ruleStrict
{ after(grammarAccess.getStrictRule()); } 
	 EOF 
;

// Rule Strict
ruleStrict 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStrictAccess().getGroup()); }
		(rule__Strict__Group__0)
		{ after(grammarAccess.getStrictAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRollback
entryRuleRollback
:
{ before(grammarAccess.getRollbackRule()); }
	 ruleRollback
{ after(grammarAccess.getRollbackRule()); } 
	 EOF 
;

// Rule Rollback
ruleRollback 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRollbackAccess().getGroup()); }
		(rule__Rollback__Group__0)
		{ after(grammarAccess.getRollbackAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleList
entryRuleList
:
{ before(grammarAccess.getListRule()); }
	 ruleList
{ after(grammarAccess.getListRule()); } 
	 EOF 
;

// Rule List
ruleList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getListAccess().getSubElementsAssignment()); }
			(rule__List__SubElementsAssignment)
			{ after(grammarAccess.getListAccess().getSubElementsAssignment()); }
		)
		(
			{ before(grammarAccess.getListAccess().getSubElementsAssignment()); }
			(rule__List__SubElementsAssignment)*
			{ after(grammarAccess.getListAccess().getSubElementsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndependentUnit
entryRuleIndependentUnit
:
{ before(grammarAccess.getIndependentUnitRule()); }
	 ruleIndependentUnit
{ after(grammarAccess.getIndependentUnitRule()); } 
	 EOF 
;

// Rule IndependentUnit
ruleIndependentUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndependentUnitAccess().getGroup()); }
		(rule__IndependentUnit__Group__0)
		{ after(grammarAccess.getIndependentUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalUnit
entryRuleConditionalUnit
:
{ before(grammarAccess.getConditionalUnitRule()); }
	 ruleConditionalUnit
{ after(grammarAccess.getConditionalUnitRule()); } 
	 EOF 
;

// Rule ConditionalUnit
ruleConditionalUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalUnitAccess().getGroup()); }
		(rule__ConditionalUnit__Group__0)
		{ after(grammarAccess.getConditionalUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePriorityUnit
entryRulePriorityUnit
:
{ before(grammarAccess.getPriorityUnitRule()); }
	 rulePriorityUnit
{ after(grammarAccess.getPriorityUnitRule()); } 
	 EOF 
;

// Rule PriorityUnit
rulePriorityUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPriorityUnitAccess().getGroup()); }
		(rule__PriorityUnit__Group__0)
		{ after(grammarAccess.getPriorityUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIteratedUnit
entryRuleIteratedUnit
:
{ before(grammarAccess.getIteratedUnitRule()); }
	 ruleIteratedUnit
{ after(grammarAccess.getIteratedUnitRule()); } 
	 EOF 
;

// Rule IteratedUnit
ruleIteratedUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteratedUnitAccess().getGroup()); }
		(rule__IteratedUnit__Group__0)
		{ after(grammarAccess.getIteratedUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopUnit
entryRuleLoopUnit
:
{ before(grammarAccess.getLoopUnitRule()); }
	 ruleLoopUnit
{ after(grammarAccess.getLoopUnitRule()); } 
	 EOF 
;

// Rule LoopUnit
ruleLoopUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopUnitAccess().getGroup()); }
		(rule__LoopUnit__Group__0)
		{ after(grammarAccess.getLoopUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterType
entryRuleParameterType
:
{ before(grammarAccess.getParameterTypeRule()); }
	 ruleParameterType
{ after(grammarAccess.getParameterTypeRule()); } 
	 EOF 
;

// Rule ParameterType
ruleParameterType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterTypeAccess().getAlternatives()); }
		(rule__ParameterType__Alternatives)
		{ after(grammarAccess.getParameterTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
		ruleOrExpression
		{ after(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinusExpression
entryRulePlusOrMinusExpression
:
{ before(grammarAccess.getPlusOrMinusExpressionRule()); }
	 rulePlusOrMinusExpression
{ after(grammarAccess.getPlusOrMinusExpressionRule()); } 
	 EOF 
;

// Rule PlusOrMinusExpression
rulePlusOrMinusExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup()); }
		(rule__PlusOrMinusExpression__Group__0)
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDivExpression
entryRuleMulOrDivExpression
:
{ before(grammarAccess.getMulOrDivExpressionRule()); }
	 ruleMulOrDivExpression
{ after(grammarAccess.getMulOrDivExpressionRule()); } 
	 EOF 
;

// Rule MulOrDivExpression
ruleMulOrDivExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivExpressionAccess().getGroup()); }
		(rule__MulOrDivExpression__Group__0)
		{ after(grammarAccess.getMulOrDivExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
		(rule__AtomicExpression__Alternatives)
		{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJavaAttribute
entryRuleJavaAttribute
:
{ before(grammarAccess.getJavaAttributeRule()); }
	 ruleJavaAttribute
{ after(grammarAccess.getJavaAttributeRule()); } 
	 EOF 
;

// Rule JavaAttribute
ruleJavaAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJavaAttributeAccess().getGroup()); }
		(rule__JavaAttribute__Group__0)
		{ after(grammarAccess.getJavaAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ParameterKindRule
ruleParameterKindRule
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterKindRuleAccess().getAlternatives()); }
		(rule__ParameterKindRule__Alternatives)
		{ after(grammarAccess.getParameterKindRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Type
ruleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getGroup_0()); }
		(rule__ModelElement__Group_0__0)
		{ after(grammarAccess.getModelElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getGroup_1()); }
		(rule__ModelElement__Group_1__0)
		{ after(grammarAccess.getModelElementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleElementAccess().getJavaImportParserRuleCall_0()); }
		ruleJavaImport
		{ after(grammarAccess.getRuleElementAccess().getJavaImportParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleElementAccess().getCheckDanglingParserRuleCall_1()); }
		ruleCheckDangling
		{ after(grammarAccess.getRuleElementAccess().getCheckDanglingParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleElementAccess().getInjectiveMatchingParserRuleCall_2()); }
		ruleInjectiveMatching
		{ after(grammarAccess.getRuleElementAccess().getInjectiveMatchingParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRuleElementAccess().getConditionsParserRuleCall_3()); }
		ruleConditions
		{ after(grammarAccess.getRuleElementAccess().getConditionsParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRuleElementAccess().getGraphParserRuleCall_4()); }
		ruleGraph
		{ after(grammarAccess.getRuleElementAccess().getGraphParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionTypeAccess().getPreserveKeyword_0()); }
		'preserve'
		{ after(grammarAccess.getActionTypeAccess().getPreserveKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getCreateKeyword_1()); }
		'create'
		{ after(grammarAccess.getActionTypeAccess().getCreateKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getDeleteKeyword_2()); }
		'delete'
		{ after(grammarAccess.getActionTypeAccess().getDeleteKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getForbidKeyword_3()); }
		'forbid'
		{ after(grammarAccess.getActionTypeAccess().getForbidKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getRequireKeyword_4()); }
		'require'
		{ after(grammarAccess.getActionTypeAccess().getRequireKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphElements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphElementsAccess().getEdgesParserRuleCall_0()); }
		ruleEdges
		{ after(grammarAccess.getGraphElementsAccess().getEdgesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphElementsAccess().getNodeParserRuleCall_1()); }
		ruleNode
		{ after(grammarAccess.getGraphElementsAccess().getNodeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphElementsAccess().getFormulaParserRuleCall_2()); }
		ruleFormula
		{ after(grammarAccess.getGraphElementsAccess().getFormulaParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGraphElementsAccess().getMultiRuleParserRuleCall_3()); }
		ruleMultiRule
		{ after(grammarAccess.getGraphElementsAccess().getMultiRuleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGraphElementsAccess().getMultiRuleReuseNodeParserRuleCall_4()); }
		ruleMultiRuleReuseNode
		{ after(grammarAccess.getGraphElementsAccess().getMultiRuleReuseNodeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup_0()); }
		(rule__Attribute__Group_0__0)
		{ after(grammarAccess.getAttributeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
		(rule__Attribute__Group_1__0)
		{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORorXORAccess().getOpORKeyword_1_1_0_0()); }
		'OR'
		{ after(grammarAccess.getORorXORAccess().getOpORKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getORorXORAccess().getOpXORKeyword_1_1_0_1()); }
		'XOR'
		{ after(grammarAccess.getORorXORAccess().getOpXORKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraphElements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionGraphElementsAccess().getConditionEdgesParserRuleCall_0()); }
		ruleConditionEdges
		{ after(grammarAccess.getConditionGraphElementsAccess().getConditionEdgesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionGraphElementsAccess().getConditionNodeParserRuleCall_1()); }
		ruleConditionNode
		{ after(grammarAccess.getConditionGraphElementsAccess().getConditionNodeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionGraphElementsAccess().getFormulaParserRuleCall_2()); }
		ruleFormula
		{ after(grammarAccess.getConditionGraphElementsAccess().getFormulaParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConditionGraphElementsAccess().getConditionReuseNodeParserRuleCall_3()); }
		ruleConditionReuseNode
		{ after(grammarAccess.getConditionGraphElementsAccess().getConditionReuseNodeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getGroup_0()); }
		(rule__UnitElement__Group_0__0)
		{ after(grammarAccess.getUnitElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getGroup_1()); }
		(rule__UnitElement__Group_1__0)
		{ after(grammarAccess.getUnitElementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getSequentialPropertiesParserRuleCall_2()); }
		ruleSequentialProperties
		{ after(grammarAccess.getUnitElementAccess().getSequentialPropertiesParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getIndependentUnitParserRuleCall_3()); }
		ruleIndependentUnit
		{ after(grammarAccess.getUnitElementAccess().getIndependentUnitParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getConditionalUnitParserRuleCall_4()); }
		ruleConditionalUnit
		{ after(grammarAccess.getUnitElementAccess().getConditionalUnitParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getPriorityUnitParserRuleCall_5()); }
		rulePriorityUnit
		{ after(grammarAccess.getUnitElementAccess().getPriorityUnitParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getIteratedUnitParserRuleCall_6()); }
		ruleIteratedUnit
		{ after(grammarAccess.getUnitElementAccess().getIteratedUnitParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getLoopUnitParserRuleCall_7()); }
		ruleLoopUnit
		{ after(grammarAccess.getUnitElementAccess().getLoopUnitParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequentialProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequentialPropertiesAccess().getStrictParserRuleCall_0()); }
		ruleStrict
		{ after(grammarAccess.getSequentialPropertiesAccess().getStrictParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequentialPropertiesAccess().getRollbackParserRuleCall_1()); }
		ruleRollback
		{ after(grammarAccess.getSequentialPropertiesAccess().getRollbackParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getEnumTypeAssignment_0()); }
		(rule__ParameterType__EnumTypeAssignment_0)
		{ after(grammarAccess.getParameterTypeAccess().getEnumTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getTypeAssignment_1()); }
		(rule__ParameterType__TypeAssignment_1)
		{ after(grammarAccess.getParameterTypeAccess().getTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinusExpression__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinusExpression__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMulOrDivExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMulOrDivExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
		(rule__PrimaryExpression__Group_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAtomicExpressionParserRuleCall_2()); }
		ruleAtomicExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getAtomicExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_0()); }
		(rule__AtomicExpression__Group_0__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_1()); }
		(rule__AtomicExpression__Group_1__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
		(rule__AtomicExpression__Group_2__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_3()); }
		(rule__AtomicExpression__Group_3__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_4()); }
		(rule__AtomicExpression__Group_4__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_5()); }
		(rule__AtomicExpression__Group_5__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_6()); }
		(rule__AtomicExpression__Group_6__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_7()); }
		(rule__AtomicExpression__Group_7__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterKindRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterKindRuleAccess().getINEnumLiteralDeclaration_0()); }
		('IN')
		{ after(grammarAccess.getParameterKindRuleAccess().getINEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterKindRuleAccess().getOUTEnumLiteralDeclaration_1()); }
		('OUT')
		{ after(grammarAccess.getParameterKindRuleAccess().getOUTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterKindRuleAccess().getINOUTEnumLiteralDeclaration_2()); }
		('INOUT')
		{ after(grammarAccess.getParameterKindRuleAccess().getINOUTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterKindRuleAccess().getVAREnumLiteralDeclaration_3()); }
		('VAR')
		{ after(grammarAccess.getParameterKindRuleAccess().getVAREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getEBigDecimalEnumLiteralDeclaration_0()); }
		('EBigDecimal')
		{ after(grammarAccess.getTypeAccess().getEBigDecimalEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEBigIntegerEnumLiteralDeclaration_1()); }
		('EBigInteger')
		{ after(grammarAccess.getTypeAccess().getEBigIntegerEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEBooleanEnumLiteralDeclaration_2()); }
		('EBoolean')
		{ after(grammarAccess.getTypeAccess().getEBooleanEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEBooleanObjectEnumLiteralDeclaration_3()); }
		('EBooleanObject')
		{ after(grammarAccess.getTypeAccess().getEBooleanObjectEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEByteEnumLiteralDeclaration_4()); }
		('EByte')
		{ after(grammarAccess.getTypeAccess().getEByteEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEByteArrayEnumLiteralDeclaration_5()); }
		('EByteArray')
		{ after(grammarAccess.getTypeAccess().getEByteArrayEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEByteObjectEnumLiteralDeclaration_6()); }
		('EByteObject')
		{ after(grammarAccess.getTypeAccess().getEByteObjectEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getECharEnumLiteralDeclaration_7()); }
		('EChar')
		{ after(grammarAccess.getTypeAccess().getECharEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getECharacterObjectEnumLiteralDeclaration_8()); }
		('ECharacterObject')
		{ after(grammarAccess.getTypeAccess().getECharacterObjectEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEDateEnumLiteralDeclaration_9()); }
		('EDate')
		{ after(grammarAccess.getTypeAccess().getEDateEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEDiagnosticChainEnumLiteralDeclaration_10()); }
		('EDiagnosticChain')
		{ after(grammarAccess.getTypeAccess().getEDiagnosticChainEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEDoubleEnumLiteralDeclaration_11()); }
		('EDouble')
		{ after(grammarAccess.getTypeAccess().getEDoubleEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEDoubleObjectEnumLiteralDeclaration_12()); }
		('EDoubleObject')
		{ after(grammarAccess.getTypeAccess().getEDoubleObjectEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEEListEnumLiteralDeclaration_13()); }
		('EEList')
		{ after(grammarAccess.getTypeAccess().getEEListEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEEnumeratorEnumLiteralDeclaration_14()); }
		('EEnumerator')
		{ after(grammarAccess.getTypeAccess().getEEnumeratorEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEFeatureMapEnumLiteralDeclaration_15()); }
		('EFeatureMap')
		{ after(grammarAccess.getTypeAccess().getEFeatureMapEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEFeatureMapEntryEnumLiteralDeclaration_16()); }
		('EFeatureMapEntry')
		{ after(grammarAccess.getTypeAccess().getEFeatureMapEntryEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEFloatEnumLiteralDeclaration_17()); }
		('EFloat')
		{ after(grammarAccess.getTypeAccess().getEFloatEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEFloatObjectEnumLiteralDeclaration_18()); }
		('EFloatObject')
		{ after(grammarAccess.getTypeAccess().getEFloatObjectEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEIntEnumLiteralDeclaration_19()); }
		('EInt')
		{ after(grammarAccess.getTypeAccess().getEIntEnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEIntegerObjectEnumLiteralDeclaration_20()); }
		('EIntegerObject')
		{ after(grammarAccess.getTypeAccess().getEIntegerObjectEnumLiteralDeclaration_20()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getETreeIteratorEnumLiteralDeclaration_21()); }
		('ETreeIterator')
		{ after(grammarAccess.getTypeAccess().getETreeIteratorEnumLiteralDeclaration_21()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEInvocationTargetExceptionEnumLiteralDeclaration_22()); }
		('EInvocationTargetException')
		{ after(grammarAccess.getTypeAccess().getEInvocationTargetExceptionEnumLiteralDeclaration_22()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEJavaClassEnumLiteralDeclaration_23()); }
		('EJavaClass')
		{ after(grammarAccess.getTypeAccess().getEJavaClassEnumLiteralDeclaration_23()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEJavaObjectEnumLiteralDeclaration_24()); }
		('EJavaObject')
		{ after(grammarAccess.getTypeAccess().getEJavaObjectEnumLiteralDeclaration_24()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getELongEnumLiteralDeclaration_25()); }
		('ELong')
		{ after(grammarAccess.getTypeAccess().getELongEnumLiteralDeclaration_25()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getELongObjectEnumLiteralDeclaration_26()); }
		('ELongObject')
		{ after(grammarAccess.getTypeAccess().getELongObjectEnumLiteralDeclaration_26()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEMapEnumLiteralDeclaration_27()); }
		('EMap')
		{ after(grammarAccess.getTypeAccess().getEMapEnumLiteralDeclaration_27()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEResourceEnumLiteralDeclaration_28()); }
		('EResource')
		{ after(grammarAccess.getTypeAccess().getEResourceEnumLiteralDeclaration_28()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEResourceSetEnumLiteralDeclaration_29()); }
		('EResourceSet')
		{ after(grammarAccess.getTypeAccess().getEResourceSetEnumLiteralDeclaration_29()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEShortEnumLiteralDeclaration_30()); }
		('EShort')
		{ after(grammarAccess.getTypeAccess().getEShortEnumLiteralDeclaration_30()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEShortObjectEnumLiteralDeclaration_31()); }
		('EShortObject')
		{ after(grammarAccess.getTypeAccess().getEShortObjectEnumLiteralDeclaration_31()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEStringEnumLiteralDeclaration_32()); }
		('EString')
		{ after(grammarAccess.getTypeAccess().getEStringEnumLiteralDeclaration_32()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getEPackageimportsAssignment_0()); }
		(rule__Model__EPackageimportsAssignment_0)
		{ after(grammarAccess.getModelAccess().getEPackageimportsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getEPackageimportsAssignment_0()); }
		(rule__Model__EPackageimportsAssignment_0)*
		{ after(grammarAccess.getModelAccess().getEPackageimportsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTransformationsystemAssignment_1()); }
	(rule__Model__TransformationsystemAssignment_1)*
	{ after(grammarAccess.getModelAccess().getTransformationsystemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EPackageImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPackageImport__Group__0__Impl
	rule__EPackageImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EPackageImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPackageImportAccess().getEPackageImportKeyword_0()); }
	'ePackageImport'
	{ after(grammarAccess.getEPackageImportAccess().getEPackageImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPackageImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPackageImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EPackageImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPackageImportAccess().getRefAssignment_1()); }
	(rule__EPackageImport__RefAssignment_1)
	{ after(grammarAccess.getEPackageImportAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EString__Group__0__Impl
	rule__EString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEStringAccess().getGroup_1()); }
	(rule__EString__Group_1__0)*
	{ after(grammarAccess.getEStringAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EString__Group_1__0__Impl
	rule__EString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEStringAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getEStringAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EString__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__0__Impl
	rule__ModelElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getRuleKeyword_0_0()); }
	'rule'
	{ after(grammarAccess.getModelElementAccess().getRuleKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__1__Impl
	rule__ModelElement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getRuleAction_0_1()); }
	()
	{ after(grammarAccess.getModelElementAccess().getRuleAction_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__2__Impl
	rule__ModelElement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getNameAssignment_0_2()); }
	(rule__ModelElement__NameAssignment_0_2)
	{ after(grammarAccess.getModelElementAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__3__Impl
	rule__ModelElement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getLeftParenthesisKeyword_0_3()); }
	'('
	{ after(grammarAccess.getModelElementAccess().getLeftParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__4__Impl
	rule__ModelElement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getGroup_0_4()); }
	(rule__ModelElement__Group_0_4__0)?
	{ after(grammarAccess.getModelElementAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__5__Impl
	rule__ModelElement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getModelElementAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__6__Impl
	rule__ModelElement__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getLeftCurlyBracketKeyword_0_6()); }
	'{'
	{ after(grammarAccess.getModelElementAccess().getLeftCurlyBracketKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__7__Impl
	rule__ModelElement__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelElementAccess().getRuleElementsAssignment_0_7()); }
		(rule__ModelElement__RuleElementsAssignment_0_7)
		{ after(grammarAccess.getModelElementAccess().getRuleElementsAssignment_0_7()); }
	)
	(
		{ before(grammarAccess.getModelElementAccess().getRuleElementsAssignment_0_7()); }
		(rule__ModelElement__RuleElementsAssignment_0_7)*
		{ after(grammarAccess.getModelElementAccess().getRuleElementsAssignment_0_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getRightCurlyBracketKeyword_0_8()); }
	'}'
	{ after(grammarAccess.getModelElementAccess().getRightCurlyBracketKeyword_0_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0_4__0__Impl
	rule__ModelElement__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getParametersAssignment_0_4_0()); }
	(rule__ModelElement__ParametersAssignment_0_4_0)
	{ after(grammarAccess.getModelElementAccess().getParametersAssignment_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getGroup_0_4_1()); }
	(rule__ModelElement__Group_0_4_1__0)*
	{ after(grammarAccess.getModelElementAccess().getGroup_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0_4_1__0__Impl
	rule__ModelElement__Group_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getCommaKeyword_0_4_1_0()); }
	','
	{ after(grammarAccess.getModelElementAccess().getCommaKeyword_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getParametersAssignment_0_4_1_1()); }
	(rule__ModelElement__ParametersAssignment_0_4_1_1)
	{ after(grammarAccess.getModelElementAccess().getParametersAssignment_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__0__Impl
	rule__ModelElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getUnitKeyword_1_0()); }
	'unit'
	{ after(grammarAccess.getModelElementAccess().getUnitKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__1__Impl
	rule__ModelElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getUnitAction_1_1()); }
	()
	{ after(grammarAccess.getModelElementAccess().getUnitAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__2__Impl
	rule__ModelElement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getNameAssignment_1_2()); }
	(rule__ModelElement__NameAssignment_1_2)
	{ after(grammarAccess.getModelElementAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__3__Impl
	rule__ModelElement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getLeftParenthesisKeyword_1_3()); }
	'('
	{ after(grammarAccess.getModelElementAccess().getLeftParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__4__Impl
	rule__ModelElement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getGroup_1_4()); }
	(rule__ModelElement__Group_1_4__0)?
	{ after(grammarAccess.getModelElementAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__5__Impl
	rule__ModelElement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getModelElementAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__6__Impl
	rule__ModelElement__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getLeftCurlyBracketKeyword_1_6()); }
	'{'
	{ after(grammarAccess.getModelElementAccess().getLeftCurlyBracketKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__7__Impl
	rule__ModelElement__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelElementAccess().getUnitElementsAssignment_1_7()); }
		(rule__ModelElement__UnitElementsAssignment_1_7)
		{ after(grammarAccess.getModelElementAccess().getUnitElementsAssignment_1_7()); }
	)
	(
		{ before(grammarAccess.getModelElementAccess().getUnitElementsAssignment_1_7()); }
		(rule__ModelElement__UnitElementsAssignment_1_7)*
		{ after(grammarAccess.getModelElementAccess().getUnitElementsAssignment_1_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getRightCurlyBracketKeyword_1_8()); }
	'}'
	{ after(grammarAccess.getModelElementAccess().getRightCurlyBracketKeyword_1_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1_4__0__Impl
	rule__ModelElement__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getParametersAssignment_1_4_0()); }
	(rule__ModelElement__ParametersAssignment_1_4_0)
	{ after(grammarAccess.getModelElementAccess().getParametersAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getGroup_1_4_1()); }
	(rule__ModelElement__Group_1_4_1__0)*
	{ after(grammarAccess.getModelElementAccess().getGroup_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group_1_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1_4_1__0__Impl
	rule__ModelElement__Group_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getCommaKeyword_1_4_1_0()); }
	','
	{ after(grammarAccess.getModelElementAccess().getCommaKeyword_1_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group_1_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group_1_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getParametersAssignment_1_4_1_1()); }
	(rule__ModelElement__ParametersAssignment_1_4_1_1)
	{ after(grammarAccess.getModelElementAccess().getParametersAssignment_1_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaImport__Group__0__Impl
	rule__JavaImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaImportAccess().getJavaImportKeyword_0()); }
	'javaImport'
	{ after(grammarAccess.getJavaImportAccess().getJavaImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaImportAccess().getPackagenameAssignment_1()); }
	(rule__JavaImport__PackagenameAssignment_1)
	{ after(grammarAccess.getJavaImportAccess().getPackagenameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckDangling__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckDangling__Group__0__Impl
	rule__CheckDangling__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDangling__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckDanglingAccess().getCheckDanglingKeyword_0()); }
	'checkDangling'
	{ after(grammarAccess.getCheckDanglingAccess().getCheckDanglingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDangling__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckDangling__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDangling__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckDanglingAccess().getCheckDanglingAssignment_1()); }
	(rule__CheckDangling__CheckDanglingAssignment_1)
	{ after(grammarAccess.getCheckDanglingAccess().getCheckDanglingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InjectiveMatching__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InjectiveMatching__Group__0__Impl
	rule__InjectiveMatching__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InjectiveMatching__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInjectiveMatchingAccess().getInjectiveMatchingKeyword_0()); }
	'injectiveMatching'
	{ after(grammarAccess.getInjectiveMatchingAccess().getInjectiveMatchingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InjectiveMatching__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InjectiveMatching__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InjectiveMatching__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInjectiveMatchingAccess().getInjectiveMatchingAssignment_1()); }
	(rule__InjectiveMatching__InjectiveMatchingAssignment_1)
	{ after(grammarAccess.getInjectiveMatchingAccess().getInjectiveMatchingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__0__Impl
	rule__Conditions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getConditionsKeyword_0()); }
	'conditions'
	{ after(grammarAccess.getConditionsAccess().getConditionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__1__Impl
	rule__Conditions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getConditionsAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__2__Impl
	rule__Conditions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getAttributeConditionsAssignment_2()); }
	(rule__Conditions__AttributeConditionsAssignment_2)
	{ after(grammarAccess.getConditionsAccess().getAttributeConditionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__3__Impl
	rule__Conditions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getGroup_3()); }
	(rule__Conditions__Group_3__0)*
	{ after(grammarAccess.getConditionsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getConditionsAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditions__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group_3__0__Impl
	rule__Conditions__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getConditionsAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditions__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionsAccess().getAttributeConditionsAssignment_3_1()); }
	(rule__Conditions__AttributeConditionsAssignment_3_1)
	{ after(grammarAccess.getConditionsAccess().getAttributeConditionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGraphAction_0()); }
	()
	{ after(grammarAccess.getGraphAccess().getGraphAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGraphKeyword_1()); }
	'graph'
	{ after(grammarAccess.getGraphAccess().getGraphKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__2__Impl
	rule__Graph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGraphAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__3__Impl
	rule__Graph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGraphElementsAssignment_3()); }
	(rule__Graph__GraphElementsAssignment_3)*
	{ after(grammarAccess.getGraphAccess().getGraphElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getGraphAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Edges__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group__0__Impl
	rule__Edges__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getEdgesKeyword_0()); }
	'edges'
	{ after(grammarAccess.getEdgesAccess().getEdgesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group__1__Impl
	rule__Edges__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getEdgesAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group__2__Impl
	rule__Edges__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getEdgesAssignment_2()); }
	(rule__Edges__EdgesAssignment_2)
	{ after(grammarAccess.getEdgesAccess().getEdgesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group__3__Impl
	rule__Edges__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getGroup_3()); }
	(rule__Edges__Group_3__0)*
	{ after(grammarAccess.getEdgesAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getEdgesAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Edges__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group_3__0__Impl
	rule__Edges__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getEdgesAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edges__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgesAccess().getEdgesAssignment_3_1()); }
	(rule__Edges__EdgesAssignment_3_1)
	{ after(grammarAccess.getEdgesAccess().getEdgesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Edge__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__0__Impl
	rule__Edge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEdgeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__1__Impl
	rule__Edge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getActiontypeAssignment_1()); }
	(rule__Edge__ActiontypeAssignment_1)?
	{ after(grammarAccess.getEdgeAccess().getActiontypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__2__Impl
	rule__Edge__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getSourceAssignment_2()); }
	(rule__Edge__SourceAssignment_2)
	{ after(grammarAccess.getEdgeAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__3__Impl
	rule__Edge__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getEdgeAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__4__Impl
	rule__Edge__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getTargetAssignment_4()); }
	(rule__Edge__TargetAssignment_4)
	{ after(grammarAccess.getEdgeAccess().getTargetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__5__Impl
	rule__Edge__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getEdgeAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__6__Impl
	rule__Edge__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getTypeAssignment_6()); }
	(rule__Edge__TypeAssignment_6)
	{ after(grammarAccess.getEdgeAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Edge__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getEdgeAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getActiontypeAssignment_0()); }
	(rule__Node__ActiontypeAssignment_0)?
	{ after(grammarAccess.getNodeAccess().getActiontypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeKeyword_1()); }
	'node'
	{ after(grammarAccess.getNodeAccess().getNodeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNameAssignment_2()); }
	(rule__Node__NameAssignment_2)
	{ after(grammarAccess.getNodeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getNodeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__4__Impl
	rule__Node__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodetypeAssignment_4()); }
	(rule__Node__NodetypeAssignment_4)
	{ after(grammarAccess.getNodeAccess().getNodetypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getGroup_5()); }
	(rule__Node__Group_5__0)?
	{ after(grammarAccess.getNodeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_5__0__Impl
	rule__Node__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_5_0()); }
	'{'
	{ after(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_5__1__Impl
	rule__Node__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getAttributeAssignment_5_1()); }
	(rule__Node__AttributeAssignment_5_1)*
	{ after(grammarAccess.getNodeAccess().getAttributeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_5_2()); }
	'}'
	{ after(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiRuleReuseNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRuleReuseNode__Group__0__Impl
	rule__MultiRuleReuseNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleReuseNodeAccess().getReuseKeyword_0()); }
	'reuse'
	{ after(grammarAccess.getMultiRuleReuseNodeAccess().getReuseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRuleReuseNode__Group__1__Impl
	rule__MultiRuleReuseNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleReuseNodeAccess().getNameAssignment_1()); }
	(rule__MultiRuleReuseNode__NameAssignment_1)
	{ after(grammarAccess.getMultiRuleReuseNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRuleReuseNode__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleReuseNodeAccess().getGroup_2()); }
	(rule__MultiRuleReuseNode__Group_2__0)?
	{ after(grammarAccess.getMultiRuleReuseNodeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiRuleReuseNode__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRuleReuseNode__Group_2__0__Impl
	rule__MultiRuleReuseNode__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleReuseNodeAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getMultiRuleReuseNodeAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRuleReuseNode__Group_2__1__Impl
	rule__MultiRuleReuseNode__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleReuseNodeAccess().getAttributeAssignment_2_1()); }
	(rule__MultiRuleReuseNode__AttributeAssignment_2_1)*
	{ after(grammarAccess.getMultiRuleReuseNodeAccess().getAttributeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRuleReuseNode__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleReuseNodeAccess().getRightCurlyBracketKeyword_2_2()); }
	'}'
	{ after(grammarAccess.getMultiRuleReuseNodeAccess().getRightCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_0__0__Impl
	rule__Attribute__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getActiontypeAssignment_0_0()); }
	(rule__Attribute__ActiontypeAssignment_0_0)?
	{ after(grammarAccess.getAttributeAccess().getActiontypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_0__1__Impl
	rule__Attribute__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0_1()); }
	(rule__Attribute__NameAssignment_0_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_0__2__Impl
	rule__Attribute__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_0_2()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getValueAssignment_0_3()); }
	(rule__Attribute__ValueAssignment_0_3)
	{ after(grammarAccess.getAttributeAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getUpdateAssignment_1_0()); }
	(rule__Attribute__UpdateAssignment_1_0)
	{ after(grammarAccess.getAttributeAccess().getUpdateAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__1__Impl
	rule__Attribute__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1_1()); }
	(rule__Attribute__NameAssignment_1_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__2__Impl
	rule__Attribute__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_2()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getValueAssignment_1_3()); }
	(rule__Attribute__ValueAssignment_1_3)
	{ after(grammarAccess.getAttributeAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRule__Group__0__Impl
	rule__MultiRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleAccess().getMultiRuleKeyword_0()); }
	'multiRule'
	{ after(grammarAccess.getMultiRuleAccess().getMultiRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRule__Group__1__Impl
	rule__MultiRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleAccess().getNameAssignment_1()); }
	(rule__MultiRule__NameAssignment_1)
	{ after(grammarAccess.getMultiRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRule__Group__2__Impl
	rule__MultiRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMultiRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRule__Group__3__Impl
	rule__MultiRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMultiRuleAccess().getMultiruleElementsAssignment_3()); }
		(rule__MultiRule__MultiruleElementsAssignment_3)
		{ after(grammarAccess.getMultiRuleAccess().getMultiruleElementsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMultiRuleAccess().getMultiruleElementsAssignment_3()); }
		(rule__MultiRule__MultiruleElementsAssignment_3)*
		{ after(grammarAccess.getMultiRuleAccess().getMultiruleElementsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiRuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMultiRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formula__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__0__Impl
	rule__Formula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getMatchingFormulaKeyword_0()); }
	'matchingFormula'
	{ after(grammarAccess.getFormulaAccess().getMatchingFormulaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__1__Impl
	rule__Formula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getFormulaAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__2__Impl
	rule__Formula__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getFormulaKeyword_2()); }
	'formula'
	{ after(grammarAccess.getFormulaAccess().getFormulaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__3__Impl
	rule__Formula__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getFormulaAssignment_3()); }
	(rule__Formula__FormulaAssignment_3)
	{ after(grammarAccess.getFormulaAccess().getFormulaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__4__Impl
	rule__Formula__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFormulaAccess().getConditionGraphsAssignment_4()); }
		(rule__Formula__ConditionGraphsAssignment_4)
		{ after(grammarAccess.getFormulaAccess().getConditionGraphsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getFormulaAccess().getConditionGraphsAssignment_4()); }
		(rule__Formula__ConditionGraphsAssignment_4)*
		{ after(grammarAccess.getFormulaAccess().getConditionGraphsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getFormulaAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ORorXOR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORorXOR__Group__0__Impl
	rule__ORorXOR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORorXORAccess().getANDParserRuleCall_0()); }
	ruleAND
	{ after(grammarAccess.getORorXORAccess().getANDParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORorXOR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORorXORAccess().getGroup_1()); }
	(rule__ORorXOR__Group_1__0)*
	{ after(grammarAccess.getORorXORAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ORorXOR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORorXOR__Group_1__0__Impl
	rule__ORorXOR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORorXORAccess().getORorXORLeftAction_1_0()); }
	()
	{ after(grammarAccess.getORorXORAccess().getORorXORLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORorXOR__Group_1__1__Impl
	rule__ORorXOR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORorXORAccess().getOpAssignment_1_1()); }
	(rule__ORorXOR__OpAssignment_1_1)
	{ after(grammarAccess.getORorXORAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORorXOR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORorXORAccess().getRightAssignment_1_2()); }
	(rule__ORorXOR__RightAssignment_1_2)
	{ after(grammarAccess.getORorXORAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__0__Impl
	rule__AND__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getANDAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getGroup_1()); }
	(rule__AND__Group_1__0)*
	{ after(grammarAccess.getANDAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group_1__0__Impl
	rule__AND__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getANDLeftAction_1_0()); }
	()
	{ after(grammarAccess.getANDAccess().getANDLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group_1__1__Impl
	rule__AND__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getANDAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getRightAssignment_1_2()); }
	(rule__AND__RightAssignment_1_2)
	{ after(grammarAccess.getANDAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLogicParserRuleCall_0_1()); }
	ruleLogic
	{ after(grammarAccess.getPrimaryAccess().getLogicParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNegationAssignment_1_2()); }
	(rule__Primary__NegationAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getNegationAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__0__Impl
	rule__Atomic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getConditionGraphRefAction_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getConditionGraphRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getConditionGraphRefAssignment_1()); }
	(rule__Atomic__ConditionGraphRefAssignment_1)
	{ after(grammarAccess.getAtomicAccess().getConditionGraphRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionGraph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionGraph__Group__0__Impl
	rule__ConditionGraph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionGraphAccess().getConditionGraphKeyword_0()); }
	'conditionGraph'
	{ after(grammarAccess.getConditionGraphAccess().getConditionGraphKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionGraph__Group__1__Impl
	rule__ConditionGraph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionGraphAccess().getNameAssignment_1()); }
	(rule__ConditionGraph__NameAssignment_1)
	{ after(grammarAccess.getConditionGraphAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionGraph__Group__2__Impl
	rule__ConditionGraph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionGraphAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConditionGraphAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionGraph__Group__3__Impl
	rule__ConditionGraph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionGraphAccess().getConditionGraphElementsAssignment_3()); }
	(rule__ConditionGraph__ConditionGraphElementsAssignment_3)*
	{ after(grammarAccess.getConditionGraphAccess().getConditionGraphElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionGraph__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionGraphAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConditionGraphAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEdges__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group__0__Impl
	rule__ConditionEdges__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getEdgesKeyword_0()); }
	'edges'
	{ after(grammarAccess.getConditionEdgesAccess().getEdgesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group__1__Impl
	rule__ConditionEdges__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getConditionEdgesAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group__2__Impl
	rule__ConditionEdges__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getEdgesAssignment_2()); }
	(rule__ConditionEdges__EdgesAssignment_2)
	{ after(grammarAccess.getConditionEdgesAccess().getEdgesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group__3__Impl
	rule__ConditionEdges__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getGroup_3()); }
	(rule__ConditionEdges__Group_3__0)*
	{ after(grammarAccess.getConditionEdgesAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getConditionEdgesAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEdges__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group_3__0__Impl
	rule__ConditionEdges__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getConditionEdgesAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdges__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgesAccess().getEdgesAssignment_3_1()); }
	(rule__ConditionEdges__EdgesAssignment_3_1)
	{ after(grammarAccess.getConditionEdgesAccess().getEdgesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEdge__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__0__Impl
	rule__ConditionEdge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditionEdgeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__1__Impl
	rule__ConditionEdge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getSourceAssignment_1()); }
	(rule__ConditionEdge__SourceAssignment_1)
	{ after(grammarAccess.getConditionEdgeAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__2__Impl
	rule__ConditionEdge__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getConditionEdgeAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__3__Impl
	rule__ConditionEdge__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getTargetAssignment_3()); }
	(rule__ConditionEdge__TargetAssignment_3)
	{ after(grammarAccess.getConditionEdgeAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__4__Impl
	rule__ConditionEdge__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getConditionEdgeAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__5__Impl
	rule__ConditionEdge__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getTypeAssignment_5()); }
	(rule__ConditionEdge__TypeAssignment_5)
	{ after(grammarAccess.getConditionEdgeAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEdge__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEdgeAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getConditionEdgeAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group__0__Impl
	rule__ConditionNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getConditionNodeAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group__1__Impl
	rule__ConditionNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getNameAssignment_1()); }
	(rule__ConditionNode__NameAssignment_1)
	{ after(grammarAccess.getConditionNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group__2__Impl
	rule__ConditionNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getConditionNodeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group__3__Impl
	rule__ConditionNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getTypeAssignment_3()); }
	(rule__ConditionNode__TypeAssignment_3)
	{ after(grammarAccess.getConditionNodeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getGroup_4()); }
	(rule__ConditionNode__Group_4__0)?
	{ after(grammarAccess.getConditionNodeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionNode__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group_4__0__Impl
	rule__ConditionNode__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getConditionNodeAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group_4__1__Impl
	rule__ConditionNode__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getAttributeAssignment_4_1()); }
	(rule__ConditionNode__AttributeAssignment_4_1)*
	{ after(grammarAccess.getConditionNodeAccess().getAttributeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionNode__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionNodeAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getConditionNodeAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionReuseNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionReuseNode__Group__0__Impl
	rule__ConditionReuseNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionReuseNodeAccess().getReuseKeyword_0()); }
	'reuse'
	{ after(grammarAccess.getConditionReuseNodeAccess().getReuseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionReuseNode__Group__1__Impl
	rule__ConditionReuseNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionReuseNodeAccess().getNameAssignment_1()); }
	(rule__ConditionReuseNode__NameAssignment_1)
	{ after(grammarAccess.getConditionReuseNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionReuseNode__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionReuseNodeAccess().getGroup_2()); }
	(rule__ConditionReuseNode__Group_2__0)?
	{ after(grammarAccess.getConditionReuseNodeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionReuseNode__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionReuseNode__Group_2__0__Impl
	rule__ConditionReuseNode__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionReuseNodeAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getConditionReuseNodeAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionReuseNode__Group_2__1__Impl
	rule__ConditionReuseNode__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionReuseNodeAccess().getAttributeAssignment_2_1()); }
	(rule__ConditionReuseNode__AttributeAssignment_2_1)*
	{ after(grammarAccess.getConditionReuseNodeAccess().getAttributeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionReuseNode__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionReuseNodeAccess().getRightCurlyBracketKeyword_2_2()); }
	'}'
	{ after(grammarAccess.getConditionReuseNodeAccess().getRightCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__0__Impl
	rule__Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getNameAssignment_0()); }
	(rule__Match__NameAssignment_0)
	{ after(grammarAccess.getMatchAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__1__Impl
	rule__Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMatchAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getValueAssignment_2()); }
	(rule__Match__ValueAssignment_2)
	{ after(grammarAccess.getMatchAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0__0__Impl
	rule__UnitElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getCallAction_0_0()); }
	()
	{ after(grammarAccess.getUnitElementAccess().getCallAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0__1__Impl
	rule__UnitElement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getElementCallAssignment_0_1()); }
	(rule__UnitElement__ElementCallAssignment_0_1)
	{ after(grammarAccess.getUnitElementAccess().getElementCallAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0__2__Impl
	rule__UnitElement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0__3__Impl
	rule__UnitElement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getGroup_0_3()); }
	(rule__UnitElement__Group_0_3__0)?
	{ after(grammarAccess.getUnitElementAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitElement__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0_3__0__Impl
	rule__UnitElement__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getParametersAssignment_0_3_0()); }
	(rule__UnitElement__ParametersAssignment_0_3_0)
	{ after(grammarAccess.getUnitElementAccess().getParametersAssignment_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getGroup_0_3_1()); }
	(rule__UnitElement__Group_0_3_1__0)*
	{ after(grammarAccess.getUnitElementAccess().getGroup_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitElement__Group_0_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0_3_1__0__Impl
	rule__UnitElement__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getCommaKeyword_0_3_1_0()); }
	','
	{ after(grammarAccess.getUnitElementAccess().getCommaKeyword_0_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_0_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getParametersAssignment_0_3_1_1()); }
	(rule__UnitElement__ParametersAssignment_0_3_1_1)
	{ after(grammarAccess.getUnitElementAccess().getParametersAssignment_0_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_1__0__Impl
	rule__UnitElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getUnitElementAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_1__1__Impl
	rule__UnitElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitElementAccess().getSubSequenceAssignment_1_1()); }
		(rule__UnitElement__SubSequenceAssignment_1_1)
		{ after(grammarAccess.getUnitElementAccess().getSubSequenceAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getUnitElementAccess().getSubSequenceAssignment_1_1()); }
		(rule__UnitElement__SubSequenceAssignment_1_1)*
		{ after(grammarAccess.getUnitElementAccess().getSubSequenceAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getUnitElementAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Strict__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strict__Group__0__Impl
	rule__Strict__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Strict__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrictAccess().getStrictKeyword_0()); }
	'strict'
	{ after(grammarAccess.getStrictAccess().getStrictKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strict__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strict__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Strict__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrictAccess().getStrictAssignment_1()); }
	(rule__Strict__StrictAssignment_1)
	{ after(grammarAccess.getStrictAccess().getStrictAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rollback__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rollback__Group__0__Impl
	rule__Rollback__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rollback__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRollbackAccess().getRollbackKeyword_0()); }
	'rollback'
	{ after(grammarAccess.getRollbackAccess().getRollbackKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rollback__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rollback__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rollback__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRollbackAccess().getRollbackAssignment_1()); }
	(rule__Rollback__RollbackAssignment_1)
	{ after(grammarAccess.getRollbackAccess().getRollbackAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndependentUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group__0__Impl
	rule__IndependentUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getIndependentKeyword_0()); }
	'independent'
	{ after(grammarAccess.getIndependentUnitAccess().getIndependentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group__1__Impl
	rule__IndependentUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getIndependentUnitAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group__2__Impl
	rule__IndependentUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getListOfListsAssignment_2()); }
	(rule__IndependentUnit__ListOfListsAssignment_2)
	{ after(grammarAccess.getIndependentUnitAccess().getListOfListsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group__3__Impl
	rule__IndependentUnit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getGroup_3()); }
	(rule__IndependentUnit__Group_3__0)*
	{ after(grammarAccess.getIndependentUnitAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getIndependentUnitAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndependentUnit__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group_3__0__Impl
	rule__IndependentUnit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getIndependentUnitAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentUnit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentUnitAccess().getListOfListsAssignment_3_1()); }
	(rule__IndependentUnit__ListOfListsAssignment_3_1)
	{ after(grammarAccess.getIndependentUnitAccess().getListOfListsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__0__Impl
	rule__ConditionalUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalUnitAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__1__Impl
	rule__ConditionalUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConditionalUnitAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__2__Impl
	rule__ConditionalUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalUnitAccess().getIfAssignment_2()); }
		(rule__ConditionalUnit__IfAssignment_2)
		{ after(grammarAccess.getConditionalUnitAccess().getIfAssignment_2()); }
	)
	(
		{ before(grammarAccess.getConditionalUnitAccess().getIfAssignment_2()); }
		(rule__ConditionalUnit__IfAssignment_2)*
		{ after(grammarAccess.getConditionalUnitAccess().getIfAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__3__Impl
	rule__ConditionalUnit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConditionalUnitAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__4__Impl
	rule__ConditionalUnit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getConditionalUnitAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__5__Impl
	rule__ConditionalUnit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getConditionalUnitAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__6__Impl
	rule__ConditionalUnit__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalUnitAccess().getThenAssignment_6()); }
		(rule__ConditionalUnit__ThenAssignment_6)
		{ after(grammarAccess.getConditionalUnitAccess().getThenAssignment_6()); }
	)
	(
		{ before(grammarAccess.getConditionalUnitAccess().getThenAssignment_6()); }
		(rule__ConditionalUnit__ThenAssignment_6)*
		{ after(grammarAccess.getConditionalUnitAccess().getThenAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__7__Impl
	rule__ConditionalUnit__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getConditionalUnitAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getGroup_8()); }
	(rule__ConditionalUnit__Group_8__0)?
	{ after(grammarAccess.getConditionalUnitAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalUnit__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group_8__0__Impl
	rule__ConditionalUnit__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getElseKeyword_8_0()); }
	'else'
	{ after(grammarAccess.getConditionalUnitAccess().getElseKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group_8__1__Impl
	rule__ConditionalUnit__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getLeftCurlyBracketKeyword_8_1()); }
	'{'
	{ after(grammarAccess.getConditionalUnitAccess().getLeftCurlyBracketKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group_8__2__Impl
	rule__ConditionalUnit__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalUnitAccess().getElseAssignment_8_2()); }
		(rule__ConditionalUnit__ElseAssignment_8_2)
		{ after(grammarAccess.getConditionalUnitAccess().getElseAssignment_8_2()); }
	)
	(
		{ before(grammarAccess.getConditionalUnitAccess().getElseAssignment_8_2()); }
		(rule__ConditionalUnit__ElseAssignment_8_2)*
		{ after(grammarAccess.getConditionalUnitAccess().getElseAssignment_8_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalUnit__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalUnitAccess().getRightCurlyBracketKeyword_8_3()); }
	'}'
	{ after(grammarAccess.getConditionalUnitAccess().getRightCurlyBracketKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PriorityUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group__0__Impl
	rule__PriorityUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getPriorityKeyword_0()); }
	'priority'
	{ after(grammarAccess.getPriorityUnitAccess().getPriorityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group__1__Impl
	rule__PriorityUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getPriorityUnitAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group__2__Impl
	rule__PriorityUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getListOfListsAssignment_2()); }
	(rule__PriorityUnit__ListOfListsAssignment_2)
	{ after(grammarAccess.getPriorityUnitAccess().getListOfListsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group__3__Impl
	rule__PriorityUnit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getGroup_3()); }
	(rule__PriorityUnit__Group_3__0)*
	{ after(grammarAccess.getPriorityUnitAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getPriorityUnitAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PriorityUnit__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group_3__0__Impl
	rule__PriorityUnit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getPriorityUnitAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PriorityUnit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityUnitAccess().getListOfListsAssignment_3_1()); }
	(rule__PriorityUnit__ListOfListsAssignment_3_1)
	{ after(grammarAccess.getPriorityUnitAccess().getListOfListsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratedUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__0__Impl
	rule__IteratedUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getIteratedUnitAction_0()); }
	()
	{ after(grammarAccess.getIteratedUnitAccess().getIteratedUnitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__1__Impl
	rule__IteratedUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getIteratedUnitAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__2__Impl
	rule__IteratedUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIteratedUnitAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__3__Impl
	rule__IteratedUnit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getIterationsAssignment_3()); }
	(rule__IteratedUnit__IterationsAssignment_3)
	{ after(grammarAccess.getIteratedUnitAccess().getIterationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__4__Impl
	rule__IteratedUnit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIteratedUnitAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__5__Impl
	rule__IteratedUnit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getIteratedUnitAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__6__Impl
	rule__IteratedUnit__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getIteratedUnitAccess().getSubElementAssignment_6()); }
		(rule__IteratedUnit__SubElementAssignment_6)
		{ after(grammarAccess.getIteratedUnitAccess().getSubElementAssignment_6()); }
	)
	(
		{ before(grammarAccess.getIteratedUnitAccess().getSubElementAssignment_6()); }
		(rule__IteratedUnit__SubElementAssignment_6)*
		{ after(grammarAccess.getIteratedUnitAccess().getSubElementAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratedUnit__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratedUnitAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIteratedUnitAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopUnit__Group__0__Impl
	rule__LoopUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopUnitAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getLoopUnitAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopUnit__Group__1__Impl
	rule__LoopUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopUnitAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLoopUnitAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopUnit__Group__2__Impl
	rule__LoopUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLoopUnitAccess().getSubElementAssignment_2()); }
		(rule__LoopUnit__SubElementAssignment_2)
		{ after(grammarAccess.getLoopUnitAccess().getSubElementAssignment_2()); }
	)
	(
		{ before(grammarAccess.getLoopUnitAccess().getSubElementAssignment_2()); }
		(rule__LoopUnit__SubElementAssignment_2)*
		{ after(grammarAccess.getLoopUnitAccess().getSubElementAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopUnit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopUnitAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLoopUnitAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getKindAssignment_0()); }
	(rule__Parameter__KindAssignment_0)?
	{ after(grammarAccess.getParameterAccess().getKindAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
	(rule__Parameter__TypeAssignment_3)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getORKeyword_1_1()); }
	'OR'
	{ after(grammarAccess.getOrExpressionAccess().getORKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getAndExpressionAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
	ruleComparisonExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1()); }
	(rule__EqualityExpression__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getPlusOrMinusExpressionParserRuleCall_0()); }
	rulePlusOrMinusExpression
	{ after(grammarAccess.getComparisonExpressionAccess().getPlusOrMinusExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
	(rule__ComparisonExpression__Group_1__0)*
	{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__0__Impl
	rule__ComparisonExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__1__Impl
	rule__ComparisonExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOpAssignment_1_1()); }
	(rule__ComparisonExpression__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRightAssignment_1_2()); }
	(rule__ComparisonExpression__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group__0__Impl
	rule__PlusOrMinusExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getMulOrDivExpressionParserRuleCall_0()); }
	ruleMulOrDivExpression
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getMulOrDivExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1()); }
	(rule__PlusOrMinusExpression__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1__0__Impl
	rule__PlusOrMinusExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinusExpression__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinusExpression__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_0__0__Impl
	rule__PlusOrMinusExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getPlusExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getPlusExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpression__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_1__0__Impl
	rule__PlusOrMinusExpression__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getMinusExpressionLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getMinusExpressionLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpression__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExpressionAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusExpressionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDivExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpression__Group__0__Impl
	rule__MulOrDivExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getMulOrDivExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExpressionAccess().getGroup_1()); }
	(rule__MulOrDivExpression__Group_1__0)*
	{ after(grammarAccess.getMulOrDivExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDivExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpression__Group_1__0__Impl
	rule__MulOrDivExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExpressionAccess().getMulOrDivExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivExpressionAccess().getMulOrDivExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpression__Group_1__1__Impl
	rule__MulOrDivExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExpressionAccess().getOpAssignment_1_1()); }
	(rule__MulOrDivExpression__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExpressionAccess().getRightAssignment_1_2()); }
	(rule__MulOrDivExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getBracketExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getBracketExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__2__Impl
	rule__PrimaryExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_0_2()); }
	(rule__PrimaryExpression__ExpressionAssignment_0_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNotExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getNotExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryExpressionAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_1_2()); }
	(rule__PrimaryExpression__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_0__0__Impl
	rule__AtomicExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getParameterValueAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getParameterValueAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_0_1()); }
	(rule__AtomicExpression__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__0__Impl
	rule__AtomicExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getJavaClassValueAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getJavaClassValueAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__1__Impl
	rule__AtomicExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_1_1()); }
	(rule__AtomicExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__2__Impl
	rule__AtomicExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__3__Impl
	rule__AtomicExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getGroup_1_3()); }
	(rule__AtomicExpression__Group_1_3__0)?
	{ after(grammarAccess.getAtomicExpressionAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1_3__0__Impl
	rule__AtomicExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getJavaParameterAssignment_1_3_0()); }
	(rule__AtomicExpression__JavaParameterAssignment_1_3_0)
	{ after(grammarAccess.getAtomicExpressionAccess().getJavaParameterAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getGroup_1_3_1()); }
	(rule__AtomicExpression__Group_1_3_1__0)*
	{ after(grammarAccess.getAtomicExpressionAccess().getGroup_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_1_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1_3_1__0__Impl
	rule__AtomicExpression__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getCommaKeyword_1_3_1_0()); }
	','
	{ after(grammarAccess.getAtomicExpressionAccess().getCommaKeyword_1_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getJavaParameterAssignment_1_3_1_1()); }
	(rule__AtomicExpression__JavaParameterAssignment_1_3_1_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getJavaParameterAssignment_1_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_2__0__Impl
	rule__AtomicExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getJavaAttributeValueAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getJavaAttributeValueAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_2_1()); }
	(rule__AtomicExpression__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_3__0__Impl
	rule__AtomicExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getStringValueAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getStringValueAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_3_1()); }
	(rule__AtomicExpression__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_4__0__Impl
	rule__AtomicExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getNumberValueAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getNumberValueAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_4_1()); }
	(rule__AtomicExpression__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_5__0__Impl
	rule__AtomicExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getIntegerValueAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getIntegerValueAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_5_1()); }
	(rule__AtomicExpression__ValueAssignment_5_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_6__0__Impl
	rule__AtomicExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getNaturalValueAction_6_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getNaturalValueAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_6_1()); }
	(rule__AtomicExpression__ValueAssignment_6_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_7__0__Impl
	rule__AtomicExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getBoolValueAction_7_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getBoolValueAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_7_1()); }
	(rule__AtomicExpression__ValueAssignment_7_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaAttribute__Group__0__Impl
	rule__JavaAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaAttributeAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getJavaAttributeAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaAttribute__Group__1__Impl
	rule__JavaAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaAttributeAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getJavaAttributeAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaAttributeAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getJavaAttributeAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__EPackageimportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEPackageimportsEPackageImportParserRuleCall_0_0()); }
		ruleEPackageImport
		{ after(grammarAccess.getModelAccess().getEPackageimportsEPackageImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TransformationsystemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTransformationsystemModelElementParserRuleCall_1_0()); }
		ruleModelElement
		{ after(grammarAccess.getModelAccess().getTransformationsystemModelElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPackageImport__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEPackageImportAccess().getRefEPackageCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEPackageImportAccess().getRefEPackageEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getEPackageImportAccess().getRefEPackageEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEPackageImportAccess().getRefEPackageCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getModelElementAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__ParametersAssignment_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_0_4_0_0()); }
		ruleParameter
		{ after(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__ParametersAssignment_0_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_0_4_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_0_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__RuleElementsAssignment_0_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getRuleElementsRuleElementParserRuleCall_0_7_0()); }
		ruleRuleElement
		{ after(grammarAccess.getModelElementAccess().getRuleElementsRuleElementParserRuleCall_0_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getModelElementAccess().getNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__ParametersAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_1_4_0_0()); }
		ruleParameter
		{ after(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__ParametersAssignment_1_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_1_4_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getModelElementAccess().getParametersParameterParserRuleCall_1_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__UnitElementsAssignment_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getUnitElementsUnitElementParserRuleCall_1_7_0()); }
		ruleUnitElement
		{ after(grammarAccess.getModelElementAccess().getUnitElementsUnitElementParserRuleCall_1_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaImport__PackagenameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaImportAccess().getPackagenameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getJavaImportAccess().getPackagenameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDangling__CheckDanglingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckDanglingAccess().getCheckDanglingEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getCheckDanglingAccess().getCheckDanglingEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InjectiveMatching__InjectiveMatchingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInjectiveMatchingAccess().getInjectiveMatchingEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getInjectiveMatchingAccess().getInjectiveMatchingEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__AttributeConditionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionsAccess().getAttributeConditionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionsAccess().getAttributeConditionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditions__AttributeConditionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionsAccess().getAttributeConditionsExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionsAccess().getAttributeConditionsExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__GraphElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getGraphElementsGraphElementsParserRuleCall_3_0()); }
		ruleGraphElements
		{ after(grammarAccess.getGraphAccess().getGraphElementsGraphElementsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__EdgesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgesAccess().getEdgesEdgeParserRuleCall_2_0()); }
		ruleEdge
		{ after(grammarAccess.getEdgesAccess().getEdgesEdgeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edges__EdgesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgesAccess().getEdgesEdgeParserRuleCall_3_1_0()); }
		ruleEdge
		{ after(grammarAccess.getEdgesAccess().getEdgesEdgeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__ActiontypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getActiontypeActionTypeParserRuleCall_1_0()); }
		ruleActionType
		{ after(grammarAccess.getEdgeAccess().getActiontypeActionTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getSourceRuleNodeTypesCrossReference_2_0()); }
		(
			{ before(grammarAccess.getEdgeAccess().getSourceRuleNodeTypesIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEdgeAccess().getSourceRuleNodeTypesIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getEdgeAccess().getSourceRuleNodeTypesCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__TargetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getTargetRuleNodeTypesCrossReference_4_0()); }
		(
			{ before(grammarAccess.getEdgeAccess().getTargetRuleNodeTypesIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEdgeAccess().getTargetRuleNodeTypesIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getEdgeAccess().getTargetRuleNodeTypesCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getTypeEReferenceCrossReference_6_0()); }
		(
			{ before(grammarAccess.getEdgeAccess().getTypeEReferenceEStringParserRuleCall_6_0_1()); }
			ruleEString
			{ after(grammarAccess.getEdgeAccess().getTypeEReferenceEStringParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getEdgeAccess().getTypeEReferenceCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ActiontypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getActiontypeActionTypeParserRuleCall_0_0()); }
		ruleActionType
		{ after(grammarAccess.getNodeAccess().getActiontypeActionTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodetypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodetypeEClassCrossReference_4_0()); }
		(
			{ before(grammarAccess.getNodeAccess().getNodetypeEClassEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getNodeAccess().getNodetypeEClassEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getNodeAccess().getNodetypeEClassCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__AttributeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getAttributeAttributeParserRuleCall_5_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getNodeAccess().getAttributeAttributeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiRuleReuseNodeAccess().getNameNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMultiRuleReuseNodeAccess().getNameNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMultiRuleReuseNodeAccess().getNameNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMultiRuleReuseNodeAccess().getNameNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRuleReuseNode__AttributeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiRuleReuseNodeAccess().getAttributeAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getMultiRuleReuseNodeAccess().getAttributeAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ActiontypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getActiontypeActionTypeParserRuleCall_0_0_0()); }
		ruleActionType
		{ after(grammarAccess.getAttributeAccess().getActiontypeActionTypeParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameEAttributeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getNameEAttributeEStringParserRuleCall_0_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAttributeAccess().getNameEAttributeEStringParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getNameEAttributeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getValueExpressionParserRuleCall_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAttributeAccess().getValueExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__UpdateAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getUpdateSetKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getUpdateSetKeyword_1_0_0()); }
			'set'
			{ after(grammarAccess.getAttributeAccess().getUpdateSetKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getUpdateSetKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameEAttributeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getNameEAttributeEStringParserRuleCall_1_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAttributeAccess().getNameEAttributeEStringParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getNameEAttributeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getValueExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAttributeAccess().getValueExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMultiRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiRule__MultiruleElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiRuleAccess().getMultiruleElementsRuleElementParserRuleCall_3_0()); }
		ruleRuleElement
		{ after(grammarAccess.getMultiRuleAccess().getMultiruleElementsRuleElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__FormulaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormulaAccess().getFormulaLogicParserRuleCall_3_0()); }
		ruleLogic
		{ after(grammarAccess.getFormulaAccess().getFormulaLogicParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__ConditionGraphsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormulaAccess().getConditionGraphsConditionGraphParserRuleCall_4_0()); }
		ruleConditionGraph
		{ after(grammarAccess.getFormulaAccess().getConditionGraphsConditionGraphParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORorXORAccess().getOpAlternatives_1_1_0()); }
		(rule__ORorXOR__OpAlternatives_1_1_0)
		{ after(grammarAccess.getORorXORAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORorXOR__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORorXORAccess().getRightANDParserRuleCall_1_2_0()); }
		ruleAND
		{ after(grammarAccess.getORorXORAccess().getRightANDParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getANDAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NegationAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNegationPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getNegationPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ConditionGraphRefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getConditionGraphRefConditionGraphCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getConditionGraphRefConditionGraphIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getConditionGraphRefConditionGraphIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getConditionGraphRefConditionGraphCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionGraphAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionGraphAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionGraph__ConditionGraphElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionGraphAccess().getConditionGraphElementsConditionGraphElementsParserRuleCall_3_0()); }
		ruleConditionGraphElements
		{ after(grammarAccess.getConditionGraphAccess().getConditionGraphElementsConditionGraphElementsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__EdgesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEdgesAccess().getEdgesConditionEdgeParserRuleCall_2_0()); }
		ruleConditionEdge
		{ after(grammarAccess.getConditionEdgesAccess().getEdgesConditionEdgeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdges__EdgesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEdgesAccess().getEdgesConditionEdgeParserRuleCall_3_1_0()); }
		ruleConditionEdge
		{ after(grammarAccess.getConditionEdgesAccess().getEdgesConditionEdgeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEdgeAccess().getSourceConditionNodeTypesCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConditionEdgeAccess().getSourceConditionNodeTypesIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionEdgeAccess().getSourceConditionNodeTypesIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConditionEdgeAccess().getSourceConditionNodeTypesCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEdgeAccess().getTargetConditionNodeTypesCrossReference_3_0()); }
		(
			{ before(grammarAccess.getConditionEdgeAccess().getTargetConditionNodeTypesIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionEdgeAccess().getTargetConditionNodeTypesIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getConditionEdgeAccess().getTargetConditionNodeTypesCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEdge__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEdgeAccess().getTypeEReferenceCrossReference_5_0()); }
		(
			{ before(grammarAccess.getConditionEdgeAccess().getTypeEReferenceEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getConditionEdgeAccess().getTypeEReferenceEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getConditionEdgeAccess().getTypeEReferenceCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionNodeAccess().getTypeEClassCrossReference_3_0()); }
		(
			{ before(grammarAccess.getConditionNodeAccess().getTypeEClassEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getConditionNodeAccess().getTypeEClassEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getConditionNodeAccess().getTypeEClassCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionNode__AttributeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionNodeAccess().getAttributeMatchParserRuleCall_4_1_0()); }
		ruleMatch
		{ after(grammarAccess.getConditionNodeAccess().getAttributeMatchParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionReuseNodeAccess().getNameConditionNodeTypesCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConditionReuseNodeAccess().getNameConditionNodeTypesIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionReuseNodeAccess().getNameConditionNodeTypesIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConditionReuseNodeAccess().getNameConditionNodeTypesCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionReuseNode__AttributeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionReuseNodeAccess().getAttributeMatchParserRuleCall_2_1_0()); }
		ruleMatch
		{ after(grammarAccess.getConditionReuseNodeAccess().getAttributeMatchParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getNameEAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getNameEAttributeEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getMatchAccess().getNameEAttributeEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMatchAccess().getNameEAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMatchAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__ElementCallAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getElementCallModelElementCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getUnitElementAccess().getElementCallModelElementIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitElementAccess().getElementCallModelElementIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getUnitElementAccess().getElementCallModelElementCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__ParametersAssignment_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getParametersParameterCrossReference_0_3_0_0()); }
		(
			{ before(grammarAccess.getUnitElementAccess().getParametersParameterIDTerminalRuleCall_0_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitElementAccess().getParametersParameterIDTerminalRuleCall_0_3_0_0_1()); }
		)
		{ after(grammarAccess.getUnitElementAccess().getParametersParameterCrossReference_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__ParametersAssignment_0_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getParametersParameterCrossReference_0_3_1_1_0()); }
		(
			{ before(grammarAccess.getUnitElementAccess().getParametersParameterIDTerminalRuleCall_0_3_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitElementAccess().getParametersParameterIDTerminalRuleCall_0_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getUnitElementAccess().getParametersParameterCrossReference_0_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__SubSequenceAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getSubSequenceUnitElementParserRuleCall_1_1_0()); }
		ruleUnitElement
		{ after(grammarAccess.getUnitElementAccess().getSubSequenceUnitElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strict__StrictAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrictAccess().getStrictEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getStrictAccess().getStrictEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rollback__RollbackAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRollbackAccess().getRollbackEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getRollbackAccess().getRollbackEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__SubElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAccess().getSubElementsUnitElementParserRuleCall_0()); }
		ruleUnitElement
		{ after(grammarAccess.getListAccess().getSubElementsUnitElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__ListOfListsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndependentUnitAccess().getListOfListsListParserRuleCall_2_0()); }
		ruleList
		{ after(grammarAccess.getIndependentUnitAccess().getListOfListsListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentUnit__ListOfListsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndependentUnitAccess().getListOfListsListParserRuleCall_3_1_0()); }
		ruleList
		{ after(grammarAccess.getIndependentUnitAccess().getListOfListsListParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__IfAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalUnitAccess().getIfUnitElementParserRuleCall_2_0()); }
		ruleUnitElement
		{ after(grammarAccess.getConditionalUnitAccess().getIfUnitElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__ThenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalUnitAccess().getThenUnitElementParserRuleCall_6_0()); }
		ruleUnitElement
		{ after(grammarAccess.getConditionalUnitAccess().getThenUnitElementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalUnit__ElseAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalUnitAccess().getElseUnitElementParserRuleCall_8_2_0()); }
		ruleUnitElement
		{ after(grammarAccess.getConditionalUnitAccess().getElseUnitElementParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__ListOfListsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityUnitAccess().getListOfListsListParserRuleCall_2_0()); }
		ruleList
		{ after(grammarAccess.getPriorityUnitAccess().getListOfListsListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityUnit__ListOfListsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityUnitAccess().getListOfListsListParserRuleCall_3_1_0()); }
		ruleList
		{ after(grammarAccess.getPriorityUnitAccess().getListOfListsListParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__IterationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratedUnitAccess().getIterationsExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getIteratedUnitAccess().getIterationsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratedUnit__SubElementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratedUnitAccess().getSubElementUnitElementParserRuleCall_6_0()); }
		ruleUnitElement
		{ after(grammarAccess.getIteratedUnitAccess().getSubElementUnitElementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopUnit__SubElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopUnitAccess().getSubElementUnitElementParserRuleCall_2_0()); }
		ruleUnitElement
		{ after(grammarAccess.getLoopUnitAccess().getSubElementUnitElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__KindAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getKindParameterKindRuleEnumRuleCall_0_0()); }
		ruleParameterKindRule
		{ after(grammarAccess.getParameterAccess().getKindParameterKindRuleEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeParameterTypeParserRuleCall_3_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterAccess().getTypeParameterTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__EnumTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getEnumTypeTypeEnumRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getParameterTypeAccess().getEnumTypeTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getTypeEClassCrossReference_1_0()); }
		(
			{ before(grammarAccess.getParameterTypeAccess().getTypeEClassEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getParameterTypeAccess().getTypeEClassEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getParameterTypeAccess().getTypeEClassCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__EqualityExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__ComparisonExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRightPlusOrMinusExpressionParserRuleCall_1_2_0()); }
		rulePlusOrMinusExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRightPlusOrMinusExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExpressionAccess().getRightMulOrDivExpressionParserRuleCall_1_1_0()); }
		ruleMulOrDivExpression
		{ after(grammarAccess.getPlusOrMinusExpressionAccess().getRightMulOrDivExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDivExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getMulOrDivExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionPrimaryExpressionParserRuleCall_1_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionPrimaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueParameterCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getAtomicExpressionAccess().getValueParameterIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicExpressionAccess().getValueParameterIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicExpressionAccess().getValueParameterCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getAtomicExpressionAccess().getValueEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__JavaParameterAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getJavaParameterExpressionParserRuleCall_1_3_0_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getJavaParameterExpressionParserRuleCall_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__JavaParameterAssignment_1_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getJavaParameterExpressionParserRuleCall_1_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getJavaParameterExpressionParserRuleCall_1_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueJavaAttributeParserRuleCall_2_1_0()); }
		ruleJavaAttribute
		{ after(grammarAccess.getAtomicExpressionAccess().getValueJavaAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueDECIMALTerminalRuleCall_4_1_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getAtomicExpressionAccess().getValueDECIMALTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueNEGATIVETerminalRuleCall_5_1_0()); }
		RULE_NEGATIVE
		{ after(grammarAccess.getAtomicExpressionAccess().getValueNEGATIVETerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueINTTerminalRuleCall_6_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicExpressionAccess().getValueINTTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueEBooleanParserRuleCall_7_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getAtomicExpressionAccess().getValueEBooleanParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DECIMAL : '-'? ('0'..'9')+ '.' ('0'..'9')+;

RULE_NEGATIVE : '-' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
