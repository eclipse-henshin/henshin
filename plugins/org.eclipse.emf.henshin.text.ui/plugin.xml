<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
	<extension
		point="org.eclipse.ui.editors">
		<editor
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.XtextEditor"
			contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
			default="true"
			extensions="henshin_text"
			id="org.eclipse.emf.henshin.text.Henshin_text"
			name="Henshin_text Editor">
		</editor>
	</extension>
	<extension
		point="org.eclipse.ui.handlers">
		<handler
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.hyperlinking.OpenDeclarationHandler"
			commandId="org.eclipse.xtext.ui.editor.hyperlinking.OpenDeclaration">
			<activeWhen>
				<reference
					definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
				</reference>
			</activeWhen>
		</handler>
		<handler
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.handler.ValidateActionHandler"
			commandId="org.eclipse.emf.henshin.text.Henshin_text.validate">
		<activeWhen>
			<reference
					definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
			</reference>
		</activeWhen>
		</handler>
		<!-- copy qualified name -->
		<handler
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.copyqualifiedname.EditorCopyQualifiedNameHandler"
			commandId="org.eclipse.xtext.ui.editor.copyqualifiedname.EditorCopyQualifiedName">
			<activeWhen>
				<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened" />
			</activeWhen>
		</handler>
		<handler
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.copyqualifiedname.OutlineCopyQualifiedNameHandler"
			commandId="org.eclipse.xtext.ui.editor.copyqualifiedname.OutlineCopyQualifiedName">
			<activeWhen>
				<and>
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.XtextEditor.opened" />
					<iterate>
						<adapt type="org.eclipse.xtext.ui.editor.outline.IOutlineNode" />
					</iterate>
				</and>
			</activeWhen>
		</handler>
	</extension>
	<extension point="org.eclipse.core.expressions.definitions">
		<definition id="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
			<and>
				<reference definitionId="isActiveEditorAnInstanceOfXtextEditor"/>
				<with variable="activeEditor">
					<test property="org.eclipse.xtext.ui.editor.XtextEditor.languageName" 
						value="org.eclipse.emf.henshin.text.Henshin_text" 
						forcePluginActivation="true"/>
				</with>		
			</and>
		</definition>
		<definition id="org.eclipse.emf.henshin.text.Henshin_text.XtextEditor.opened">
			<and>
				<reference definitionId="isXtextEditorActive"/>
				<with variable="activeEditor">
					<test property="org.eclipse.xtext.ui.editor.XtextEditor.languageName" 
						value="org.eclipse.emf.henshin.text.Henshin_text" 
						forcePluginActivation="true"/>
				</with>		
			</and>
		</definition>
	</extension>
	<extension
			point="org.eclipse.ui.preferencePages">
		<page
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.preferences.LanguageRootPreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text"
			name="Henshin_text">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
		</page>
		<page
			category="org.eclipse.emf.henshin.text.Henshin_text"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.syntaxcoloring.SyntaxColoringPreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text.coloring"
			name="Syntax Coloring">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
		</page>
		<page
			category="org.eclipse.emf.henshin.text.Henshin_text"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.templates.XtextTemplatePreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text.templates"
			name="Templates">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
		</page>
	</extension>
	<extension
			point="org.eclipse.ui.propertyPages">
		<page
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.preferences.LanguageRootPreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text"
			name="Henshin_text">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
			<enabledWhen>
				<adapt type="org.eclipse.core.resources.IProject"/>
			</enabledWhen>
			<filter name="projectNature" value="org.eclipse.xtext.ui.shared.xtextNature"/>
		</page>
	</extension>
	<extension
		point="org.eclipse.ui.keywords">
		<keyword
			id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"
			label="Henshin_text"/>
	</extension>
	<extension
		point="org.eclipse.ui.commands">
	<command
			description="Trigger expensive validation"
			id="org.eclipse.emf.henshin.text.Henshin_text.validate"
			name="Validate">
	</command>
	<!-- copy qualified name -->
	<command
			id="org.eclipse.xtext.ui.editor.copyqualifiedname.EditorCopyQualifiedName"
			categoryId="org.eclipse.ui.category.edit"
			description="Copy the qualified name for the selected element"
			name="Copy Qualified Name">
	</command>
	<command
			id="org.eclipse.xtext.ui.editor.copyqualifiedname.OutlineCopyQualifiedName"
			categoryId="org.eclipse.ui.category.edit"
			description="Copy the qualified name for the selected element"
			name="Copy Qualified Name">
	</command>
	</extension>
	<extension point="org.eclipse.ui.menus">
		<menuContribution
			locationURI="popup:#TextEditorContext?after=group.edit">
			 <command
				 commandId="org.eclipse.emf.henshin.text.Henshin_text.validate"
				 style="push"
				 tooltip="Trigger expensive validation">
			<visibleWhen checkEnabled="false">
				<reference
					definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
				</reference>
			</visibleWhen>
		</command>
		</menuContribution>
		<!-- copy qualified name -->
		<menuContribution locationURI="popup:#TextEditorContext?after=copy">
			<command commandId="org.eclipse.xtext.ui.editor.copyqualifiedname.EditorCopyQualifiedName" 
				style="push" tooltip="Copy Qualified Name">
				<visibleWhen checkEnabled="false">
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened" />
				</visibleWhen>
			</command>
		</menuContribution>
		<menuContribution locationURI="menu:edit?after=copy">
			<command commandId="org.eclipse.xtext.ui.editor.copyqualifiedname.EditorCopyQualifiedName"
				style="push" tooltip="Copy Qualified Name">
				<visibleWhen checkEnabled="false">
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened" />
				</visibleWhen>
			</command>
		</menuContribution>
		<menuContribution locationURI="popup:org.eclipse.xtext.ui.outline?after=additions">
			<command commandId="org.eclipse.xtext.ui.editor.copyqualifiedname.OutlineCopyQualifiedName" 
				style="push" tooltip="Copy Qualified Name">
				<visibleWhen checkEnabled="false">
					<and>
						<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.XtextEditor.opened" />
						<iterate>
							<adapt type="org.eclipse.xtext.ui.editor.outline.IOutlineNode" />
						</iterate>
					</and>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.menus">
		<menuContribution locationURI="popup:#TextEditorContext?endof=group.find">
			<command commandId="org.eclipse.xtext.ui.editor.FindReferences">
				<visibleWhen checkEnabled="false">
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
					</reference>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.handlers">
		<handler
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.findrefs.FindReferencesHandler"
			commandId="org.eclipse.xtext.ui.editor.FindReferences">
			<activeWhen>
				<reference
					definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
				</reference>
			</activeWhen>
		</handler>
	</extension>
	<!-- adding resource factories -->
	<extension
		point="org.eclipse.emf.ecore.extension_parser">
		<parser
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.resource.IResourceFactory"
			type="henshin_text">
		</parser>
	</extension>
	<extension point="org.eclipse.xtext.extension_resourceServiceProvider">
		<resourceServiceProvider
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.resource.IResourceUIServiceProvider"
			uriExtension="henshin_text">
		</resourceServiceProvider>
	</extension>
	<!-- marker definitions for org.eclipse.emf.henshin.text.Henshin_text -->
	<extension
			id="henshin_text.check.fast"
			name="Henshin_text Problem"
			point="org.eclipse.core.resources.markers">
		<super type="org.eclipse.xtext.ui.check.fast"/>
		<persistent value="true"/>
	</extension>
	<extension
			id="henshin_text.check.normal"
			name="Henshin_text Problem"
			point="org.eclipse.core.resources.markers">
		<super type="org.eclipse.xtext.ui.check.normal"/>
		<persistent value="true"/>
	</extension>
	<extension
			id="henshin_text.check.expensive"
			name="Henshin_text Problem"
			point="org.eclipse.core.resources.markers">
		<super type="org.eclipse.xtext.ui.check.expensive"/>
		<persistent value="true"/>
	</extension>
	<extension point="org.eclipse.xtext.builder.participant">
		<participant
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.builder.IXtextBuilderParticipant"
			fileExtensions="henshin_text"/>
	</extension>
	<extension point="org.eclipse.ui.preferencePages">
		<page
			category="org.eclipse.emf.henshin.text.Henshin_text"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.builder.preferences.BuilderPreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text.compiler.preferencePage"
			name="Compiler">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
		</page>
	</extension>
	<extension point="org.eclipse.ui.propertyPages">
		<page
			category="org.eclipse.emf.henshin.text.Henshin_text"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.builder.preferences.BuilderPreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text.compiler.propertyPage"
			name="Compiler">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
			<enabledWhen>
				<adapt type="org.eclipse.core.resources.IProject"/>
			</enabledWhen>
			<filter name="projectNature" value="org.eclipse.xtext.ui.shared.xtextNature"/>
		</page>
	</extension>
	<extension point="org.eclipse.ui.menus">
		<menuContribution locationURI="popup:#TextEditorContext?after=xtext.ui.openDeclaration">
			<command
				commandId="org.eclipse.xtext.ui.OpenGeneratedFileCommand"
				id="org.eclipse.emf.henshin.text.Henshin_text.OpenGeneratedCode"
				style="push">
				<visibleWhen checkEnabled="false">
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened" />
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.handlers">
		<handler
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.generator.trace.OpenGeneratedFileHandler"
			commandId="org.eclipse.xtext.ui.OpenGeneratedFileCommand">
			<activeWhen>
				<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened" />
			</activeWhen>
		</handler>
	</extension>
	<!-- Quick Outline -->
	<extension
		point="org.eclipse.ui.handlers">
		<handler 
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.outline.quickoutline.ShowQuickOutlineActionHandler"
			commandId="org.eclipse.xtext.ui.editor.outline.QuickOutline">
			<activeWhen>
				<reference
					definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
				</reference>
			</activeWhen>
		</handler>
	</extension>
	<extension
		point="org.eclipse.ui.commands">
		<command
			description="Open the quick outline."
			id="org.eclipse.xtext.ui.editor.outline.QuickOutline"
			name="Quick Outline">
		</command>
	</extension>
	<extension point="org.eclipse.ui.menus">
		<menuContribution
			locationURI="popup:#TextEditorContext?after=group.open">
			<command commandId="org.eclipse.xtext.ui.editor.outline.QuickOutline"
				style="push"
				tooltip="Open Quick Outline">
				<visibleWhen checkEnabled="false">
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened"/>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<!-- quickfix marker resolution generator for org.eclipse.emf.henshin.text.Henshin_text -->
	<extension
			point="org.eclipse.ui.ide.markerResolution">
		<markerResolutionGenerator
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.quickfix.MarkerResolutionGenerator"
			markerType="org.eclipse.emf.henshin.text.ui.henshin_text.check.fast">
			<attribute
				name="FIXABLE_KEY"
				value="true">
			</attribute>
		</markerResolutionGenerator>
		<markerResolutionGenerator
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.quickfix.MarkerResolutionGenerator"
			markerType="org.eclipse.emf.henshin.text.ui.henshin_text.check.normal">
			<attribute
				name="FIXABLE_KEY"
				value="true">
			</attribute>
		</markerResolutionGenerator>
		<markerResolutionGenerator
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.quickfix.MarkerResolutionGenerator"
			markerType="org.eclipse.emf.henshin.text.ui.henshin_text.check.expensive">
			<attribute
				name="FIXABLE_KEY"
				value="true">
			</attribute>
		</markerResolutionGenerator>
	</extension>
	<!-- Rename Refactoring -->
	<extension point="org.eclipse.ui.handlers">
		<handler 
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.refactoring.ui.DefaultRenameElementHandler"
			commandId="org.eclipse.xtext.ui.refactoring.RenameElement">
			<activeWhen>
				<reference
					definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
				</reference>
			</activeWhen>
		</handler>
	</extension>
	<extension point="org.eclipse.ui.menus">
		<menuContribution
			locationURI="popup:#TextEditorContext?after=group.edit">
			<command commandId="org.eclipse.xtext.ui.refactoring.RenameElement"
				style="push">
				<visibleWhen checkEnabled="false">
					<reference
						definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
					</reference>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.preferencePages">
		<page
			category="org.eclipse.emf.henshin.text.Henshin_text"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.refactoring.ui.RefactoringPreferencePage"
			id="org.eclipse.emf.henshin.text.Henshin_text.refactoring"
			name="Refactoring">
			<keywordReference id="org.eclipse.emf.henshin.text.ui.keyword_Henshin_text"/>
		</page>
	</extension>
	<extension point="org.eclipse.compare.contentViewers">
		<viewer id="org.eclipse.emf.henshin.text.Henshin_text.compare.contentViewers"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.compare.InjectableViewerCreator"
			extensions="henshin_text">
		</viewer>
	</extension>
	<extension point="org.eclipse.compare.contentMergeViewers">
		<viewer id="org.eclipse.emf.henshin.text.Henshin_text.compare.contentMergeViewers"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.compare.InjectableViewerCreator"
			extensions="henshin_text" label="Henshin_text Compare">
		</viewer>
	</extension>
	<extension point="org.eclipse.ui.editors.documentProviders">
		<provider id="org.eclipse.emf.henshin.text.Henshin_text.editors.documentProviders"
			class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.xtext.ui.editor.model.XtextDocumentProvider"
			extensions="henshin_text">
		</provider>
	</extension>
	<extension point="org.eclipse.team.core.fileTypes">
		<fileTypes
			extension="henshin_text"
			type="text">
		</fileTypes>
	</extension>
	
		<!--Apply Transformation Button-->
	<extension point="org.eclipse.ui.handlers">
		<handler
				class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.emf.henshin.text.ui.handler.ApplyTransformationHandler"
				commandId="org.eclipse.emf.henshin.text.ui.handler.ApplyTransformationCommand">
    		</handler>
	</extension>
	
		<!--Convert To Henshin_text Button-->
	<extension point="org.eclipse.ui.handlers">
		<handler
				class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.emf.henshin.text.ui.handler.TransformHenshin2Henshin_textHandler"
				commandId="org.eclipse.emf.henshin.text.ui.handler.ConvertToHenshinTextCommand">
    		</handler>
	</extension>
   	
	<extension point="org.eclipse.ui.commands">
		<command name="Apply Transformation" id="org.eclipse.emf.henshin.text.ui.handler.ApplyTransformationCommand">
		</command>
	</extension>


	<extension point="org.eclipse.ui.commands">
		<command name="Convert to Henshin_text" id="org.eclipse.emf.henshin.text.ui.handler.ConvertToHenshinTextCommand">
		</command>
	</extension>

	<extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.eclipse.emf.henshin.menu">
         <command
               commandId="org.eclipse.emf.henshin.text.ui.handler.ApplyTransformationCommand"
               icon="icons/henshin-apply.gif"
               label="Apply Transformation Text"
               style="push">
               <visibleWhen>
        		<iterate ifEmpty="false">
        			<or>
   						<instanceof value="org.eclipse.jface.text.TextSelection"/>
   						<and>
   							<instanceof value="org.eclipse.core.resources.IResource"/>
   							<test property="org.eclipse.core.resources.name" value="*.henshin_text"/>
   						</and>
					</or>
 	    		</iterate>
			</visibleWhen> 
         </command>
      </menuContribution>
   </extension>


	<extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.eclipse.emf.henshin.menu">
         <command
               commandId="org.eclipse.emf.henshin.text.ui.handler.ConvertToHenshinTextCommand"
               icon="icons/henshin-apply.gif"
               label="Convert to Henshin_text"
               style="push">
               <visibleWhen>
        		<iterate ifEmpty="false">
        			<or>
   						<instanceof value="org.eclipse.jface.text.TextSelection"/>
   						<and>
   							<instanceof value="org.eclipse.core.resources.IResource"/>
   							<test property="org.eclipse.core.resources.name" value="*.henshin"/>
   						</and>
					</or>
 	    		</iterate>
			</visibleWhen> 
         </command>
      </menuContribution>
   </extension>

	<extension point="org.eclipse.ui.menus">
		<menuContribution locationURI="popup:#TextEditorContext?after=additions">
			<command
					commandId="org.eclipse.emf.henshin.text.ui.handler.ApplyTransformationCommand"
					icon="icons/henshin-apply.gif"
					label="Apply Transformation"
					style="push">
				<visibleWhen checkEnabled="false">                      
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
					</reference>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<!--Transform henshin_text to henshin Button-->
		<extension point="org.eclipse.ui.handlers">
		<handler
				class="org.eclipse.emf.henshin.text.ui.Henshin_textExecutableExtensionFactory:org.eclipse.emf.henshin.text.ui.handler.TransformHenshin_TextHandler"
				commandId="org.eclipse.emf.henshin.text.ui.handler.TransformHenshin_TextCommand">
			<enabledWhen>
        		<iterate ifEmpty="false">
   					<instanceof value=" org.eclipse.jface.text.TextSelection"/>
 	    		</iterate>
			</enabledWhen>
    	</handler>
	</extension>
   	
	<extension point="org.eclipse.ui.commands">
		<command name="Transform to henshin" id="org.eclipse.emf.henshin.text.ui.handler.TransformHenshin_TextCommand">
		</command>
	</extension>

	<extension point="org.eclipse.ui.menus">
		<menuContribution locationURI="popup:#TextEditorContext?after=additions">
			<command
					commandId="org.eclipse.emf.henshin.text.ui.handler.TransformHenshin_TextCommand"
					icon="icons/HenshinDiagramFile.gif"
					label="Transform to henshin"
					style="push">
				<visibleWhen checkEnabled="false">                      
					<reference definitionId="org.eclipse.emf.henshin.text.Henshin_text.Editor.opened">
					</reference>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
 <extension
       point="org.eclipse.ui.newWizards">
    <category
          id="org.eclipse.emf.henshin.wizards"
          name="Henshin">
    </category>
    <wizard
          category="org.eclipse.emf.henshin.wizards"
          class="org.eclipse.emf.henshin.text.ui.wizard.NewHenshin_textFileWizard"
          icon="icons/HenshinDiagramFile.gif"
          id="org.eclipse.emf.henshin.text.ui.wizard.NewHenshin_textFileWizard"
          name="Henshin Text">
    </wizard>
 </extension>
<extension point="org.eclipse.m2m.qvt.oml.javaBlackboxUnits">
  <unit name="HenshinTextExpressionParserLib" namespace="m2m.qvt.oml">
    <library name="HenshinTextExpressionParser" 
             class="org.eclipse.emf.henshin.text.ui.util.ExpressionParser">
      <metamodel nsURI="http://www.eclipse.org/emf/henshin/text/Henshin_text"/>
      <metamodel nsURI="http://www.eclipse.org/emf/2002/Ecore"/>
    </library>
  </unit>
</extension>
	
	<!--New henshin_text-FileWizard-->
</plugin>
